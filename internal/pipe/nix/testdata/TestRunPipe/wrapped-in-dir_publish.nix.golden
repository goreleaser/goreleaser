# This file was generated by GoReleaser. DO NOT EDIT.
# vim: set ft=nix ts=2 sw=2 sts=2 et sta
{
system ? builtins.currentSystem
, lib
, fetchurl
, installShellFiles
, stdenvNoCC
}:
let
  shaMap = {
    i686-linux = "sha16";
    x86_64-linux = "sha1";
    aarch64-linux = "sha2";
    x86_64-darwin = "sha3";
    aarch64-darwin = "sha4";
  };

  urlMap = {
    i686-linux = "https://dummyhost/download/v1.2.1/foo_linux_386.tar.gz";
    x86_64-linux = "https://dummyhost/download/v1.2.1/foo_linux_amd64v1.tar.gz";
    aarch64-linux = "https://dummyhost/download/v1.2.1/foo_linux_arm64.tar.gz";
    x86_64-darwin = "https://dummyhost/download/v1.2.1/foo_darwin_amd64v1.tar.gz";
    aarch64-darwin = "https://dummyhost/download/v1.2.1/foo_darwin_arm64.tar.gz";
  };
  sourceRootMap = {
    i686-linux = "./foo_386";
    x86_64-linux = "./foo_amd64";
    aarch64-linux = "./foo_arm64";
    x86_64-darwin = "./foo_amd64";
    aarch64-darwin = "./foo_arm64";
  };
in
stdenvNoCC.mkDerivation {
  pname = "wrapped-in-dir";
  version = "1.2.1";
  src = fetchurl {
    url = urlMap.${system};
    sha256 = shaMap.${system};
  };

  sourceRoot = sourceRootMap.${system};

  nativeBuildInputs = [ installShellFiles ];

  installPhase = ''
    mkdir -p $out/bin
    cp foo $out/bin/foo
    installManPage ./manpages/foo.1.gz
  '';
  postInstall = ''
    echo "do something"
  '';

  system = system;

  meta = {
    description = "my test";
    homepage = "https://goreleaser.com";
    license = lib.licenses.mit;

    sourceProvenance = [ lib.sourceTypes.binaryNativeCode ];

    platforms = [
      "aarch64-darwin"
      "aarch64-linux"
      "i686-linux"
      "x86_64-darwin"
      "x86_64-linux"
    ];
  };
}
