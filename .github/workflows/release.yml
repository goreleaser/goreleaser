name: release

on:
  push:
    branches:
      - "main"
    tags:
      - "v*"

permissions:
  contents: write
  id-token: write
  packages: write
  attestations: write

jobs:
  trigger-generate:
    runs-on: ubuntu-latest
    needs: [goreleaser]
    steps:
      - uses: benc-uk/workflow-dispatch@v1.2.4
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          repo: goreleaser/goreleaser
          ref: main
          token: ${{ secrets.GH_PAT }}
          workflow: generate.yml
  notify-goreleaser-cross:
    runs-on: ubuntu-latest
    needs: [trigger-generate]
    steps:
      - name: get version
        if: startsWith(github.ref, 'refs/tags/v')
        run: echo "RELEASE_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
      - name: notify goreleaser-cross with new release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: benc-uk/workflow-dispatch@v1.2.4
        with:
          token: ${{ secrets.GH_PAT }}
          repo: goreleaser/goreleaser-cross
          ref: master
          workflow: goreleaser-bump
          inputs: '{ "tag" : "${{ env.RELEASE_TAG }}" }'
      - name: notify goreleaser-rust-cross with new release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: benc-uk/workflow-dispatch@v1.2.4
        with:
          token: ${{ secrets.GH_PAT }}
          repo: vedantmgoyal9/goreleaser-rust-cross
          ref: main
          workflow: CI
          inputs: '{ "release-tag" : "${{ env.RELEASE_TAG }}" }'
  goreleaser-check-pkgs:
    runs-on: ubuntu-latest
    env:
      DOCKER_CLI_EXPERIMENTAL: "enabled"
    needs: [goreleaser]
    if: github.ref == 'refs/heads/main'
    strategy:
      matrix:
        format: [deb, rpm, apk]
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0
      - uses: arduino/setup-task@b91d5d2c96a56797b48ac1e0e89220bf64044611 # v1
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/setup-qemu-action@53851d14592bedcffcf25ea515637cff71ef929a # v2
      - uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4
        with:
          path: |
            ./dist/*.deb
            ./dist/*.rpm
            ./dist/*.apk
          key: ${{ github.ref }}
      - run: task goreleaser:test:${{ matrix.format }}
  goreleaser:
    runs-on: ubuntu-latest
    env:
      DOCKER_CLI_EXPERIMENTAL: "enabled"
    steps:
      - run: df -h
      - name: "node-cleanup"
        # this should increase free space from ~21gb to ~38gb
        run: |
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc /opt/hostedtoolcache/CodeQL
          sudo docker image prune --all --force
          sudo docker builder prune -a
      - run: df -h
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0
      - uses: arduino/setup-task@b91d5d2c96a56797b48ac1e0e89220bf64044611 # v1
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/setup-qemu-action@53851d14592bedcffcf25ea515637cff71ef929a # v2
      - uses: docker/setup-buildx-action@6524bf65af31da8d45b59e8c27de4bd072b392f5 # v3
      - name: setup-snapcraft
        run: sudo snap install snapcraft --classic
      - uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v4
        with:
          go-version: stable
      - uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4
        with:
          path: |
            ./dist/*.deb
            ./dist/*.rpm
            ./dist/*.apk
          key: ${{ github.ref }}
      - uses: sigstore/cosign-installer@v3.7.0
      - uses: anchore/sbom-action/download-syft@v0.18.0
      - uses: crazy-max/ghaction-upx@v3
        with:
          install-only: true
      - uses: cachix/install-nix-action@v30
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
      - name: dockerhub-login
        if: startsWith(github.ref, 'refs/tags/v')
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: ghcr-login
        if: startsWith(github.ref, 'refs/tags/v')
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: goreleaser-release
        run: task goreleaser
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
          MASTODON_CLIENT_ID: ${{ secrets.MASTODON_CLIENT_ID }}
          MASTODON_CLIENT_SECRET: ${{ secrets.MASTODON_CLIENT_SECRET }}
          MASTODON_ACCESS_TOKEN: ${{ secrets.MASTODON_ACCESS_TOKEN }}
          FURY_TOKEN: ${{ secrets.FURY_TOKEN }}
          DISCORD_WEBHOOK_ID: ${{ secrets.DISCORD_WEBHOOK_ID }}
          DISCORD_WEBHOOK_TOKEN: ${{ secrets.DISCORD_WEBHOOK_TOKEN }}
          AUR_KEY: ${{ secrets.AUR_KEY }}
          MACOS_SIGN_P12: ${{ secrets.MACOS_SIGN_P12 }}
          MACOS_SIGN_PASSWORD: ${{ secrets.MACOS_SIGN_PASSWORD }}
          MACOS_NOTARY_ISSUER_ID: ${{ secrets.MACOS_NOTARY_ISSUER_ID }}
          MACOS_NOTARY_KEY_ID: ${{ secrets.MACOS_NOTARY_KEY_ID }}
          MACOS_NOTARY_KEY: ${{ secrets.MACOS_NOTARY_KEY }}
          SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.SNAPCRAFT_LOGIN }}
      - uses: actions/attest-build-provenance@v2
        with:
          subject-checksums: ./dist/checksums.txt
      - run: df -h
        if: ${{ always() }}
