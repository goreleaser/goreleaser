name: build

concurrency:
  group: ${{ github.head_ref || github.ref_name }}
  cancel-in-progress: true

on:
  push:
    branches:
      - "main"
  pull_request:
    paths:
      - "go.*"
      - "**/*.go"
      - "Taskfile.yml"
      - "Dockerfile"
      - ".github/workflows/*.yml"

permissions:
  contents: read

jobs:
  govulncheck:
    uses: caarlos0/meta/.github/workflows/govulncheck.yml@main
  semgrep:
    uses: caarlos0/meta/.github/workflows/semgrep.yml@main
  ruleguard:
    uses: caarlos0/meta/.github/workflows/ruleguard.yml@main
    with:
      args: "-disable largeloopcopy"
  test:
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    env:
      DOCKER_CLI_EXPERIMENTAL: "enabled"
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0
      - uses: arduino/setup-task@b91d5d2c96a56797b48ac1e0e89220bf64044611 # v2
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/setup-qemu-action@4574d27a4764455b42196d70a065bc6853246a25 # v3
        if: matrix.os == 'ubuntu-latest'
      - uses: docker/setup-buildx-action@6524bf65af31da8d45b59e8c27de4bd072b392f5 # v3
        if: matrix.os == 'ubuntu-latest'
      - name: setup-snapcraft
        if: matrix.os == 'ubuntu-latest'
        run: sudo snap install snapcraft --classic
      - uses: crazy-max/ghaction-upx@v3
        with:
          install-only: true
      - uses: cachix/install-nix-action@v30
        if: matrix.os == 'ubuntu-latest'
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5
        with:
          go-version: stable
      - uses: mlugg/setup-zig@v1
      - uses: oven-sh/setup-bun@v2
      - uses: denoland/setup-deno@v2
      - uses: cargo-bins/cargo-binstall@main
      - name: setup-cargo
        run: |
          rustup default stable
          cargo binstall cargo-zigbuild
      - uses: sigstore/cosign-installer@v3.8.0
      - uses: anchore/sbom-action/download-syft@v0.18.0
      - run: task setup
      - run: task build
      - run: task test
      - uses: codecov/codecov-action@13ce06bfc6bbe3ecf90edbbf1bc32fe5978ca1d3 # v5
        if: matrix.os == 'ubuntu-latest'
        with:
          file: ./coverage.txt
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      - run: git diff
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0
      - run: go run . check
  dependabot:
    needs: [test]
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
    if: ${{ github.actor == 'dependabot[bot]' && github.event_name == 'pull_request'}}
    steps:
      - id: metadata
        uses: dependabot/fetch-metadata@d7267f607e9d3fb96fc2fbe83e0af444713e90b7 # v2
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
      - run: |
          gh pr review --approve "$PR_URL"
          gh pr merge --squash --auto "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
